<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | TECH.KAZEOR.NET]]></title>
  <link href="http://tech.kazeor.net/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://tech.kazeor.net/"/>
  <updated>2013-01-08T23:55:36+09:00</updated>
  <id>http://tech.kazeor.net/</id>
  <author>
    <name><![CDATA[Takeshi YAEDA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ajax flow in Rails]]></title>
    <link href="http://tech.kazeor.net/blog/2013/01/07/ajax-flow-in-rails/"/>
    <updated>2013-01-07T22:57:00+09:00</updated>
    <id>http://tech.kazeor.net/blog/2013/01/07/ajax-flow-in-rails</id>
    <content type="html"><![CDATA[<p>ドットインストールのチュートリアルでブログシステムを作っているときに，ブログポストの削除リンクを以下のコードで実装した．</p>

<p><code>ruby
&lt;%= link_to 'Delete', post, :confirm =&gt; 'Sure?', :method =&gt; :delete, :remote =&gt; true %&gt;
</code></p>

<p><code>:confirm</code>は確認用ダイアログのテキスト，<code>:method</code>はアクセスするHTTPメソッド，<code>:remote</code>はajaxアクセスするかしないか，の設定．</p>

<p>これは次のように展開される．</p>

<p><code>html
&lt;a href="http://tech.kazeor.net/posts/1" data-confirm="Sure?" data-method="delete" rel="nofollow"&gt;Delete&lt;/a&gt;
</code></p>

<p>これだけではクリックしたら/post/1にHTTP DELETEでアクセスするようにはならない．疑問が残ったので調べてみると，jquery_ujs.jsというスクリプトで色々やっていた．</p>

<p>jquery_ujs.jsはGemfileでjquery-railsを設定していると直接読み込まれるようで，railsアプリケーションのディレクトリに見つけることは出来ない．私の環境だと<code>~/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jquery-rails-2.1.4/vendor/assets/javascripts/jquery_ujs.js</code>にあったが，Githubのレポジトリ(<a href="https://github.com/rails/jquery-ujs%20rails/jquery-ujs%20·%20GitHub">rails/jquery-ujs · GitHub</a>)かDeveloper Toolsなどで直接中身をみるのが早い．何故か圧縮されていないので簡単にコードを追うことができる．(因みにjquery本体も圧縮されていない）</p>

<p><code>data-method</code>についてはjquery_ujs.jsの185行目のhandleMethod以下で，<code>data-method</code>に合わせてformを作ってsubmitしているのが分かる．</p>

<p>ちなみに，jquery_ujs.jsの149行目からのoptionの設定で，ajaxが成功したときにajax:successがtriggerされることが分かる．ここまできてようやく以下のようにして結果を取得できることが分かる．(ここでは削除に成功した項目をfadeOutで消している)</p>

<p><code>js
$('a[data-method="delete"]').on('ajax:success', function(e, data, status, xhr) {
  $('#post_' + data.post.id).fadeOut("slow");
});
</code></p>

<p>古いバージョンはちょっと話が違うようだが，Rails 3.2ではjqueryが標準で利用できるようになっていて，jquery_ujsというライブラリでajax周りの実装が簡単に行うことができるようになっているのが分かった．Web Frameworkってすげー．</p>
]]></content>
  </entry>
  
</feed>
